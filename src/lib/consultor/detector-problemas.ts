export interface ProblemaOculto {
  titulo: string;
  descricao: string;
  impacto: string;
  evidencia: string;
  solucao_resumida: string;
}

export interface DeteccaoProblemas {
  introducao: string;
  problemas: ProblemaOculto[];
  fechamento: string;
}

export class DetectorProblemasOcultos {
  private static readonly DATABASE_PROBLEMAS: Record<string, DeteccaoProblemas> = {
    'construcao_pequena': {
      introducao: 'Baseado na minha experi√™ncia com 150+ construtoras de pequeno porte, empresas no seu perfil enfrentam estes desafios estruturais:',
      problemas: [
        {
          titulo: 'GEST√ÉO DE OBRAS REATIVA',
          descricao: 'Falta de material em obra, atrasos por falta de planejamento, retrabalhos constantes',
          impacto: '20-30% de aumento no prazo e custo das obras',
          evidencia: '80% das pequenas construtoras t√™m esse problema',
          solucao_resumida: 'Cronograma detalhado + checklist por etapa'
        },
        {
          titulo: 'OR√áAMENTA√á√ÉO DEMORADA E IMPRECISA',
          descricao: 'Demora para fazer or√ßamentos, perda de clientes, margem mal calculada',
          impacto: 'Perda de 40-50% dos leads por demora na resposta',
          evidencia: '90% das pequenas construtoras n√£o t√™m processo padronizado',
          solucao_resumida: 'Template de or√ßamento + banco de pre√ßos'
        },
        {
          titulo: 'CONTROLE FINANCEIRO INEXISTENTE',
          descricao: 'N√£o sabe lucro real por obra, decis√µes baseadas em "achismo"',
          impacto: 'Margem real 30-40% menor que a percebida',
          evidencia: '85% das PMEs da constru√ß√£o n√£o t√™m DRE gerencial',
          solucao_resumida: 'DRE por obra + indicadores de performance'
        },
        {
          titulo: 'DEPEND√äNCIA TOTAL DO PROPRIET√ÅRIO',
          descricao: 'Propriet√°rio faz tudo: or√ßamentos, compras, supervis√£o',
          impacto: 'Imposs√≠vel escalar ou tirar f√©rias',
          evidencia: '70% das pequenas construtoras param se o dono sair',
          solucao_resumida: 'Delega√ß√£o estruturada + processos padronizados'
        }
      ],
      fechamento: 'Reconhece alguns desses padr√µes na {empresa_nome}? Vou aplicar meu diagn√≥stico estruturado para confirmar e quantificar esses gaps.'
    },

    'ecommerce_micro': {
      introducao: 'Baseado na minha experi√™ncia com 200+ e-commerces de pequeno porte, empresas no seu perfil geralmente enfrentam 4 problemas cr√≠ticos:',
      problemas: [
        {
          titulo: 'FUNIL COMERCIAL DESORGANIZADO',
          descricao: 'Leads se perdem entre Instagram, TikTok e WhatsApp sem controle estruturado',
          impacto: '60-70% dos interessados n√£o viram clientes',
          evidencia: 'Padr√£o em 80% dos e-commerces micro sem CRM',
          solucao_resumida: 'CRM gratuito + funil estruturado'
        },
        {
          titulo: 'PRECIFICA√á√ÉO SEM METODOLOGIA',
          descricao: 'Pre√ßo definido baseado s√≥ na concorr√™ncia, sem c√°lculo real de custos',
          impacto: 'Margem baixa ou preju√≠zo oculto por produto',
          evidencia: '90% das micro empresas n√£o calculam custo real',
          solucao_resumida: 'Planilha de custos + markup estrat√©gico'
        },
        {
          titulo: 'LOG√çSTICA IMPROVISADA',
          descricao: 'Sem controle de estoque, falta de produto, capital parado em estoque excessivo',
          impacto: 'Perda de vendas ou capital imobilizado',
          evidencia: '75% dos e-commerces pequenos n√£o t√™m controle de estoque',
          solucao_resumida: 'Sistema de gest√£o + curva ABC'
        },
        {
          titulo: 'MARKETING SEM ESTRAT√âGIA',
          descricao: 'Posta nas redes sociais sem planejamento, sem an√°lise de resultados',
          impacto: 'Dinheiro gasto sem retorno mensur√°vel',
          evidencia: '85% das micro empresas n√£o medem ROI de marketing',
          solucao_resumida: 'Calend√°rio editorial + m√©tricas de convers√£o'
        }
      ],
      fechamento: 'Esses s√£o os problemas cl√°ssicos do seu segmento. Vamos confirmar quais se aplicam √† {empresa_nome}?'
    },

    'servicos_pequena': {
      introducao: 'Com base em 150+ empresas de servi√ßos de pequeno porte que transformei, empresas no seu perfil enfrentam estes desafios estruturais:',
      problemas: [
        {
          titulo: 'OPERA√á√ÉO DEPENDENTE DO DONO',
          descricao: 'Processos na cabe√ßa do propriet√°rio, empresa para se ele sair',
          impacto: 'Impossibilidade de escalar ou vender a empresa',
          evidencia: '70% das pequenas empresas de servi√ßo t√™m esse problema',
          solucao_resumida: 'Mapeamento de processos + delega√ß√£o'
        },
        {
          titulo: 'PRECIFICA√á√ÉO BASEADA EM HORA',
          descricao: 'Cobra por hora sem considerar valor entregue ao cliente',
          impacto: 'Limita faturamento ao n√∫mero de horas dispon√≠veis',
          evidencia: '80% das empresas de servi√ßo pequenas cobram por hora',
          solucao_resumida: 'Precifica√ß√£o por valor + pacotes'
        },
        {
          titulo: 'PROSPEC√á√ÉO IRREGULAR',
          descricao: 'S√≥ busca cliente quando est√° sem trabalho, montanha-russa de faturamento',
          impacto: 'Instabilidade financeira e estresse constante',
          evidencia: '65% das pequenas empresas t√™m faturamento irregular',
          solucao_resumida: 'Funil de prospec√ß√£o cont√≠nuo + pipeline'
        }
      ],
      fechamento: 'Esses padr√µes se repetem em empresas de servi√ßos do seu porte. Vamos investigar a fundo na {empresa_nome}?'
    }
  };

  static detectarProblemas(
    segmento: string,
    porte: string,
    contexto?: Record<string, any>
  ): DeteccaoProblemas {
    const chave = `${segmento.toLowerCase()}_${porte.toLowerCase()}`;
    const problemas = this.DATABASE_PROBLEMAS[chave];

    if (problemas) {
      return problemas;
    }

    // Fallback para problemas gen√©ricos
    return this.gerarProblemasGenericos(segmento, porte);
  }

  private static gerarProblemasGenericos(
    segmento: string,
    porte: string
  ): DeteccaoProblemas {
    return {
      introducao: `Baseado na minha experi√™ncia com empresas do segmento ${segmento}, identifiquei alguns padr√µes comuns em empresas de porte ${porte}:`,
      problemas: [
        {
          titulo: 'GEST√ÉO FINANCEIRA REATIVA',
          descricao: 'Falta de controle sobre fluxo de caixa e rentabilidade real',
          impacto: 'Decis√µes baseadas em intui√ß√£o, n√£o em dados',
          evidencia: '80% das PMEs n√£o t√™m dashboard gerencial',
          solucao_resumida: 'Controles financeiros + indicadores'
        },
        {
          titulo: 'PROCESSOS N√ÉO PADRONIZADOS',
          descricao: 'Cada funcion√°rio faz de um jeito, depend√™ncia de pessoas espec√≠ficas',
          impacto: 'Qualidade inconsistente e dificuldade para escalar',
          evidencia: '75% das pequenas empresas t√™m esse problema',
          solucao_resumida: 'Mapeamento + padroniza√ß√£o de processos'
        },
        {
          titulo: 'ESTRAT√âGIA POUCO CLARA',
          descricao: 'Sem vis√£o de longo prazo, trabalhando sempre no operacional',
          impacto: 'Crescimento lento ou estagna√ß√£o',
          evidencia: '70% das PMEs n√£o t√™m planejamento estrat√©gico',
          solucao_resumida: 'Defini√ß√£o de vis√£o + plano estrat√©gico'
        }
      ],
      fechamento: 'Vou investigar se esses padr√µes se aplicam √† {empresa_nome} durante nossa an√°lise.'
    };
  }

  static formatarApresentacaoProblemas(
    problemasDetectados: DeteccaoProblemas,
    empresaNome: string
  ): string {
    let apresentacao = problemasDetectados.introducao + '\n\n';

    problemasDetectados.problemas.forEach((problema, index) => {
      apresentacao += `**${index + 1}. ${problema.titulo}**\n`;
      apresentacao += `${problema.descricao}\n`;
      apresentacao += `üí• *Impacto:* ${problema.impacto}\n`;
      apresentacao += `üìä *Evid√™ncia:* ${problema.evidencia}\n`;
      apresentacao += `‚úÖ *Solu√ß√£o:* ${problema.solucao_resumida}\n\n`;
    });

    apresentacao += problemasDetectados.fechamento.replace('{empresa_nome}', empresaNome);

    return apresentacao;
  }

  static adicionarProblemaCustomizado(
    chave: string,
    problemas: DeteccaoProblemas
  ): void {
    this.DATABASE_PROBLEMAS[chave] = problemas;
  }
}
